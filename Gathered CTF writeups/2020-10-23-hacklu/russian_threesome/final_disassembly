SECTOR 0:
00.hi: 0000+.-0-.0 [   33]   Y = drumsector 0
00.lo: 0--00.000.0 [ -b64]   jmp 1+Y1.hi
01.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
01.lo: -00+-.-0-.0 [-191d]   X = drumsector 1
02.hi: ++0++.-0-.0 [ 2352]   Z = drumsector 30
02.lo: +----.-00.0 [  cde]   IO.puts Z
03.hi: -0-+0.0-+.0 [-1b8d]   mov V, pc+X11.hi
03.lo: +++++.000.0 [ 2649]   call
04.hi: 00000.00+.+ [    4]     sector: 3
04.lo: 00000.-+0.0 [  -12]     off: 7.hi+1
05.hi: +++-0.-0-.0 [ 23f4]   Z = drumsector 32
05.lo: +----.-00.0 [  cde]   IO.puts Z
06.hi: 00000.+--.0 [    f]   halt
06.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
SECTOR 1:
00.hi: -++++.00-.0 [ -cfc]   mov X26.lo, V
00.lo: -00-0.0-0.0 [-1a9d]   mov V, X12.hi
01.hi: -+++-.+00.0 [ -d80]   mov ACC, X26
01.lo: 00000.-++.+ [   -e]   (V+) mov Y13.hi, ACC
02.hi: -0-+0.0--.0 [-1b93]   add V, X11.hi
02.lo: -00-0.00-.0 [-1a97]   mov X12.hi, V
03.hi: -++++.0-0.0 [ -d02]   mov V, X26.lo
03.lo: 0000-.+00.+ [  -35]   (V+) mov ACC, Y13
04.hi: -+++-.-++.0 [ -daa]   mov X26, ACC
04.lo: -+++0.0-0.0 [ -d53]   mov V, X26.hi
05.hi: 00000.-0-.+ [  -1d]   (V+) Y = drumsector -1
05.lo: -++++.0-0.0 [ -d02]   mov V, X26.lo
06.hi: 00000.000.+ [    1]   (V+) jmp 1+Y13.hi
06.lo: -00-0.0-0.0 [-1a9d]   mov V, X12.hi
07.hi: -0-++.0--.0 [-1b42]   add V, X11.lo
07.lo: -00-0.00-.0 [-1a97]   mov X12.hi, V
08.hi: 00000.+00.+ [   1c]   (V+) mov ACC, Y13.hi
08.lo: -+++-.-++.0 [ -daa]   mov X26, ACC
09.hi: -+++0.0-0.0 [ -d53]   mov V, X26.hi
09.lo: 00000.-0-.+ [  -1d]   (V+) Y = drumsector -1
10.hi: -++++.0-0.0 [ -d02]   mov V, X26.lo
10.lo: 0000+.000.+ [   52]   (V+) jmp 1+Y13.lo
11.hi: 00000.00+.0 [    3]   mov Y13.hi, pc
11.lo: 00000.00-.0 [   -3]   mov Y13.hi, V
12.hi: 0000-.000.- [  -52]   (V-)jmp 1+Y13
12.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
13.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
13.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
14.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
14.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
15.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
15.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
16.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
16.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
17.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
17.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
18.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
18.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
19.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
19.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
20.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
20.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
21.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
21.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
22.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
22.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
23.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
23.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
24.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
24.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
25.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
25.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
26.hi: 00000.000.+ [    1]   (V+) jmp 1+Y13.hi
26.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
SECTOR 2:
SECTOR 3:
--- as string:
4. Остановить

---
07.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
07.lo: +++--.-0-.0 [ 23a3]   Z = drumsector 31
08.hi: +----.-00.0 [  cde]   IO.puts Z
08.lo: 0----.-00.0 [ -cc3]   IO.puts Y
09.hi: -0-+0.0-+.0 [-1b8d]   mov V, pc+X11.hi
09.lo: +++++.000.0 [ 2649]   call
10.hi: 00000.0+-.- [    5]     sector: 4
10.lo: 0000-.+++.+ [  -29]     off: X26.lo+1
11.hi: +----.+00.0 [  d14]   mov ACC, Z0
11.lo: 0++++.+0-.0 [  cc0]   sub ACC, Y26.lo
12.hi: 00+0+.0+0.0 [  333]   jzer 1+Y16.lo
12.lo: 0++++.+0-.0 [  cc0]   sub ACC, Y26.lo
13.hi: 0+-0+.0+0.0 [  60c]   jzer 1+Y19.lo
13.lo: 0++++.+0-.0 [  cc0]   sub ACC, Y26.lo
14.hi: 0+00+.0+0.0 [  8e5]   jzer 1+Y22.lo
14.lo: 0++++.+0-.0 [  cc0]   sub ACC, Y26.lo
15.hi: 0++00.0+0.0 [  b6d]   jzer 1+Y25.hi
15.lo: +++0-.-0-.0 [ 2496]   Z = drumsector 34
16.hi: +----.-00.0 [  cde]   IO.puts Z
16.lo: 0-+00.000.0 [ -5b2]   jmp 1+Y7.hi
17.hi: -0-+0.0-+.0 [-1b8d]   mov V, pc+X11.hi
17.lo: +++++.000.0 [ 2649]   call
18.hi: 00000.0+-.0 [    6]     sector: 5
18.lo: 00000.+0-.0 [   18]     off: 21.hi+1
19.hi: 0-+00.000.0 [ -5b2]   jmp 1+Y7.hi
19.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
20.hi: -0-+0.0-+.0 [-1b8d]   mov V, pc+X11.hi
20.lo: +++++.000.0 [ 2649]   call
21.hi: 00000.0++.- [    b]     sector: 10
21.lo: 00000.000.0 [    0]     off: 13.hi+1
22.hi: 0-+00.000.0 [ -5b2]   jmp 1+Y7.hi
22.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
23.hi: -0-+0.0-+.0 [-1b8d]   mov V, pc+X11.hi
23.lo: +++++.000.0 [ 2649]   call
24.hi: 00000.0+-.+ [    7]     sector: 6
24.lo: 0000-.+++.+ [  -29]     off: X26.lo+1
25.hi: 0-+00.000.0 [ -5b2]   jmp 1+Y7.hi
25.lo: --+-0.000.0 [-2046]   return
26.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
26.lo: 00000.000.+ [    1]   (V+) jmp 1+Y13.hi
SECTOR 4:
00.hi: +++00.-0-.0 [ 24e7]   Z = drumsector 35
00.lo: +---0.-00.0 [  d2f]   IO.gets Z
01.hi: 0+0++.0-0.0 [  9c6]   mov V, Y23.lo
01.lo: +---0.+00.+ [  d66]   (V+) mov ACC, Z0.hi
02.hi: 0-+0+.0+0.0 [ -558]   jzer 1+Y7.lo
02.lo: 0++0+.+0-.0 [  bcd]   sub ACC, Y25.lo
03.hi: 00--0.0+-.0 [ -3c6]   jneg 1+Y9.hi
03.lo: +---0.-++.+ [  d3c]   (V+) mov Z0.hi, ACC
04.hi: 0++-+.+0-.0 [  ada]   sub ACC, Y24.lo
04.lo: 00--0.0++.0 [ -3c0]   jpos 1+Y9.hi
05.hi: +---0.+00.+ [  d66]   (V+) mov ACC, Z0.hi
05.lo: 0+++-.+-+.0 [  c1b]   mov BETA, Y26
06.hi: 0++00.+++.0 [  b8b]   add ACC, Y25.hi * BETA
06.lo: 0+++-.-++.0 [  bf7]   mov Y26, ACC
07.hi: 0++-0.0--.0 [  a65]   add V, Y24.hi
07.lo: 0--00.000.0 [ -b64]   jmp 1+Y1.hi
08.hi: 0+++-.+00.0 [  c21]   mov ACC, Y26
08.lo: +----.-++.0 [  cea]   mov Z0, ACC
09.hi: --+-0.000.0 [-2046]   return
09.lo: +++-+.-0-.0 [ 2445]   Z = drumsector 33
10.hi: +----.-00.0 [  cde]   IO.puts Z
10.lo: --+-0.000.0 [-2046]   return
11.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
11.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
12.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
12.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
13.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
13.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
14.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
14.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
15.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
15.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
16.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
16.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
17.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
17.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
18.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
18.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
19.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
19.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
20.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
20.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
21.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
21.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
22.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
22.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
23.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
23.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
24.hi: 00000.000.+ [    1]   (V+) jmp 1+Y13.hi
24.lo: 00000.0+0.0 [    9]   jzer 1+Y13.hi
25.hi: 00000.0+0.+ [    a]   (V+) jzer 1+Y13.hi
25.lo: 0000+.--+.0 [   30]   unk #48 (0x30)
SECTOR 5:
00.hi: ----+.+--.+ [-2597]   (V+) halt
00.lo: ----0.0++.- [-25ed]   (V-)jpos 1+X0.hi
01.hi: ----0.0++.0 [-25ec]   jpos 1+X0.hi
01.lo: ----+.+--.- [-2599]   (V-)halt
02.hi: ----0.0++.0 [-25ec]   jpos 1+X0.hi
02.lo: ----0.0++.- [-25ed]   (V-)jpos 1+X0.hi
03.hi: ----+.0+0.0 [-259e]   jzer 1+X0.lo
03.lo: ----0.0+0.0 [-25ef]   jzer 1+X0.hi
04.hi: ----0.0++.0 [-25ec]   jpos 1+X0.hi
04.lo: ----+.+--.+ [-2597]   (V+) halt
05.hi: ----0.+--.- [-25ea]   (V-)halt
05.lo: ----0.0++.0 [-25ec]   jpos 1+X0.hi
06.hi: ----+.0++.- [-259c]   (V-)jpos 1+X0.lo
06.lo: ----0.0++.- [-25ed]   (V-)jpos 1+X0.hi
07.hi: ----0.0++.0 [-25ec]   jpos 1+X0.hi
07.lo: ----+.+--.- [-2599]   (V-)halt
08.hi: ----+.+--.+ [-2597]   (V+) halt
08.lo: ----+.0++.0 [-259b]   jpos 1+X0.lo
09.hi: ----+.0+0.0 [-259e]   jzer 1+X0.lo
09.lo: ----+.0+0.0 [-259e]   jzer 1+X0.lo
10.hi: ----+.---.- [-25cf]   (V-)unk #-9679 (0x-25cf)
10.lo: ----0.---.- [-2620]   (V-)unk #-9760 (0x-2620)
11.hi: ----+.+--.- [-2599]   (V-)halt
11.lo: ----0.+-0.- [-25e7]   (V-)weirdxor ACC, X0.hi
12.hi: ----+.+-+.0 [-2592]   mov BETA, X0.lo
12.lo: ----0.+-0.+ [-25e5]   (V+) weirdxor ACC, X0.hi
13.hi: ----0.+-0.- [-25e7]   (V-)weirdxor ACC, X0.hi
13.lo: ---0-.+--.+ [-2546]   (V+) halt
14.hi: ----0.0++.0 [-25ec]   jpos 1+X0.hi
14.lo: ----+.+--.+ [-2597]   (V+) halt
15.hi: ----0.+--.- [-25ea]   (V-)halt
15.lo: ----0.0++.0 [-25ec]   jpos 1+X0.hi
16.hi: ----+.0++.- [-259c]   (V-)jpos 1+X0.lo
16.lo: ----0.0++.- [-25ed]   (V-)jpos 1+X0.hi
17.hi: ----0.0++.0 [-25ec]   jpos 1+X0.hi
17.lo: ----+.+--.- [-2599]   (V-)halt
18.hi: ----+.+--.+ [-2597]   (V+) halt
18.lo: ----+.0++.0 [-259b]   jpos 1+X0.lo
19.hi: ----+.0+0.0 [-259e]   jzer 1+X0.lo
19.lo: ----+.0+0.0 [-259e]   jzer 1+X0.lo
20.hi: ----+.---.- [-25cf]   (V-)unk #-9679 (0x-25cf)
20.lo: -----.---.- [-2671]   (V-)unk #-9841 (0x-2671)
21.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
21.lo: +0+-0.-0-.0 [ 1b69]   Z = drumsector 5
22.hi: +-+++.-00.0 [ 1518]   IO.audio Z
22.lo: --+-0.000.0 [-2046]   return
SECTOR 6:
00.hi: ++0+-.-0-.0 [ 22b0]   Z = drumsector 28
00.lo: +----.-00.0 [  cde]   IO.puts Z
01.hi: +0+0+.-0-.0 [ 1cad]   Z = drumsector 9
01.lo: +---0.-00.0 [  d2f]   IO.gets Z
02.hi: ++-+0.+00.0 [ 2061]   mov ACC, Z20.hi
02.lo: 0-000.0+0.0 [ -882]   jzer 1+Y4.hi
03.hi: ++0+0.-0-.0 [ 2301]   Z = drumsector 29
03.lo: +----.-00.0 [  cde]   IO.puts Z
04.hi: --+-0.000.0 [-2046]   return
04.lo: ++--+.-0+.0 [ 1e99]   drumsector 15 = Z
05.hi: -0-+0.0-+.0 [-1b8d]   mov V, pc+X11.hi
05.lo: +++++.000.0 [ 2649]   call
06.hi: 00000.0+0.0 [    9]     sector: 8
06.lo: 0000-.+++.+ [  -29]     off: X26.lo+1
07.hi: -00+0.-0+.0 [-18c6]   drumsector 2 = X
07.lo: -0+0-.-0-.0 [-1737]   X = drumsector 7
08.hi: ++00+.0-0.0 [ 2274]   mov V, Z22.lo
08.lo: ----0.+00.+ [-25dc]   (V+) mov ACC, X0.hi
09.hi: +---0.+0-.+ [  d63]   (V+) sub ACC, Z0.hi
09.lo: 00-+0.0+0.0 [ -1dd]   jzer 1+Y11.hi
10.hi: ++00+.-0-.0 [ 225f]   Z = drumsector 27
10.lo: +----.-00.0 [  cde]   IO.puts Z
11.hi: 0++-0.000.0 [  a71]   jmp 1+Y24.hi
11.lo: +++-0.0--.0 [ 2406]   add V, Z24.hi
12.hi: 000++.0+-.0 [  14a]   jneg 1+Y14.lo
12.lo: +++++.00-.0 [ 2646]   mov Z26.lo, V
13.hi: +++++.+00.0 [ 2664]   mov ACC, Z26.lo
13.lo: +++-0.+-0.0 [ 2424]   weirdxor ACC, Z24.hi
14.hi: 00-+0.0+-.0 [ -1e0]   jneg 1+Y11.hi
14.lo: 0-++0.000.0 [ -4bf]   jmp 1+Y8.hi
15.hi: -+-0-.-0-.0 [-145e]   X = drumsector 16
15.lo: ++--+.-0-.0 [ 1e93]   Z = drumsector 15
16.hi: ++00+.0-0.0 [ 2274]   mov V, Z22.lo
16.lo: ----0.+00.+ [-25dc]   (V+) mov ACC, X0.hi
17.hi: +---0.+0-.+ [  d63]   (V+) sub ACC, Z0.hi
17.lo: 0+--+.0+0.0 [  519]   jzer 1+Y18.lo
18.hi: 0+--+.0++.0 [  51c]   jpos 1+Y18.lo
18.lo: +++00.+0+.0 [ 2523]   add ACC, Z25.hi
19.hi: +---0.-++.+ [  d3c]   (V+) mov Z0.hi, ACC
19.lo: +++-0.0--.0 [ 2406]   add V, Z24.hi
20.hi: 0+00+.0+-.0 [  8e2]   jneg 1+Y22.lo
20.lo: +++++.00-.0 [ 2646]   mov Z26.lo, V
21.hi: +++++.+00.0 [ 2664]   mov ACC, Z26.lo
21.lo: +++-0.+-0.0 [ 2424]   weirdxor ACC, Z24.hi
22.hi: 0+-00.0+-.0 [  5b8]   jneg 1+Y19.hi
22.lo: 00+00.000.0 [  2d9]   jmp 1+Y16.hi
23.hi: -++00.-0-.0 [ -e5b]   X = drumsector 35
23.lo: -+--+.-0+.0 [-14a9]   drumsector 15 = X
24.hi: +----.-00.0 [  cde]   IO.puts Z
24.lo: -00+0.-0-.0 [-18cc]   X = drumsector 2
25.hi: --+-0.000.0 [-2046]   return
25.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
SECTOR 7:
00.hi: 0000+.00-.+ [   4f]   (V+) mov Y13.lo, V
00.lo: 0000+.+0+.+ [   70]   (V+) add ACC, Y13.lo
01.hi: 000+0.000.+ [   f4]   (V+) jmp 1+Y14.hi
01.lo: 000+-.++-.0 [   c3]   mov ACC, Y14 + ACC*BETA
02.hi: 0000+.000.+ [   52]   (V+) jmp 1+Y13.lo
02.lo: 000+0.000.+ [   f4]   (V+) jmp 1+Y14.hi
03.hi: 0000+.+0+.- [   6e]   (V-)add ACC, Y13.lo
03.lo: 000+-.0+-.- [   a7]   (V-)jneg 1+Y14
04.hi: 0000+.+0+.+ [   70]   (V+) add ACC, Y13.lo
04.lo: 000+-.++-.0 [   c3]   mov ACC, Y14 + ACC*BETA
05.hi: 0000+.-+-.+ [   3d]   (V+) unk #61 (0x3d)
05.lo: 00000.+0+.- [   1d]   (V-)add ACC, Y13.hi
06.hi: 000+0.000.+ [   f4]   (V+) jmp 1+Y14.hi
06.lo: 00000.+-0.+ [   13]   (V+) weirdxor ACC, Y13.hi
07.hi: 000+0.000.+ [   f4]   (V+) jmp 1+Y14.hi
07.lo: 000+-.++-.0 [   c3]   mov ACC, Y14 + ACC*BETA
08.hi: 000+0.-+0.+ [   e2]   (V+) shift ACC, Y14.hi
08.lo: 00000.+0+.- [   1d]   (V-)add ACC, Y13.hi
09.hi: 0000+.-++.- [   41]   (V-)mov Y13.lo, ACC
09.lo: 0000+.+0+.+ [   70]   (V+) add ACC, Y13.lo
10.hi: 0000+.0-0.+ [   49]   (V+) mov V, Y13.lo
10.lo: 0000+.+00.0 [   6c]   mov ACC, Y13.lo
11.hi: 000+-.++-.0 [   c3]   mov ACC, Y14 + ACC*BETA
11.lo: 0000+.+0+.+ [   70]   (V+) add ACC, Y13.lo
12.hi: 000+0.000.+ [   f4]   (V+) jmp 1+Y14.hi
12.lo: 0000+.-+-.+ [   3d]   (V+) unk #61 (0x3d)
13.hi: 00000.+--.- [    e]   (V-)halt
13.lo: 000+-.++-.0 [   c3]   mov ACC, Y14 + ACC*BETA
14.hi: 0000+.-+-.+ [   3d]   (V+) unk #61 (0x3d)
14.lo: 0000+.-++.- [   41]   (V-)mov Y13.lo, ACC
15.hi: 0000+.++-.0 [   72]   mov ACC, Y13.lo + ACC*BETA
15.lo: 000+0.000.+ [   f4]   (V+) jmp 1+Y14.hi
16.hi: 000+-.++-.0 [   c3]   mov ACC, Y14 + ACC*BETA
16.lo: 00000.++0.- [   23]   (V-)mul ACC, Y13.hi
17.hi: 00000.0++.- [    b]   (V-)jpos 1+Y13.hi
17.lo: 0000+.-++.- [   41]   (V-)mov Y13.lo, ACC
18.hi: 0000+.+0+.+ [   70]   (V+) add ACC, Y13.lo
18.lo: 0000+.0-0.+ [   49]   (V+) mov V, Y13.lo
19.hi: 0000+.0++.0 [   5d]   jpos 1+Y13.lo
19.lo: 00000.0+-.+ [    7]   (V+) jneg 1+Y13.hi
SECTOR 8:
00.hi: -00+0.-0+.0 [-18c6]   drumsector 2 = X
00.lo: ++00+.0-0.0 [ 2274]   mov V, Z22.lo
01.hi: +++0+.+00.0 [ 2571]   mov ACC, Z25.lo
01.lo: +---0.+0+.+ [  d69]   (V+) add ACC, Z0.hi
02.hi: +++0+.-++.0 [ 2547]   mov Z25.lo, ACC
02.lo: +++-0.0--.0 [ 2406]   add V, Z24.hi
03.hi: 0-0++.0+-.0 [ -741]   jneg 1+Y5.lo
03.lo: ++++0.00-.0 [ 25f5]   mov Z26.hi, V
04.hi: ++++0.+00.0 [ 2613]   mov ACC, Z26.hi
04.lo: +++-0.+-0.0 [ 2424]   weirdxor ACC, Z24.hi
05.hi: 0--+0.0+-.0 [ -a6b]   jneg 1+Y2.hi
05.lo: 0---+.000.0 [ -c06]   jmp 1+Y0.lo
06.hi: ++00+.0-0.0 [ 2274]   mov V, Z22.lo
06.lo: +++++.00-.0 [ 2646]   mov Z26.lo, V
07.hi: +---0.+00.+ [  d66]   (V+) mov ACC, Z0.hi
07.lo: ++0+0.0-0.0 [ 2316]   mov V, Z23.hi
08.hi: ++000.+0-.0 [ 2244]   sub ACC, Z22.hi
08.lo: 00--+.0+-.0 [ -375]   jneg 1+Y9.lo
09.hi: ++0++.0--.0 [ 2364]   add V, Z23.lo
09.lo: 0-+0+.000.0 [ -561]   jmp 1+Y7.lo
10.hi: ++000.+0+.0 [ 224a]   add ACC, Z22.hi
10.lo: -+-00.-0-.+ [-140c]   (V+) X = drumsector 17
11.hi: ++0++.-+0.0 [ 235e]   shift ACC, Z23.lo
11.lo: ++0++.+0-.0 [ 2388]   sub ACC, Z23.lo
12.hi: ++++0.-++.0 [ 25e9]   mov Z26.hi, ACC
12.lo: ++++0.0-0.0 [ 25ef]   mov V, Z26.hi
13.hi: ----0.+00.+ [-25dc]   (V+) mov ACC, X0.hi
13.lo: +++++.0-0.0 [ 2640]   mov V, Z26.lo
14.hi: +---0.-++.+ [  d3c]   (V+) mov Z0.hi, ACC
14.lo: +++-0.0--.0 [ 2406]   add V, Z24.hi
15.hi: 00+++.0+-.0 [  423]   jneg 1+Y17.lo
15.lo: +++++.00-.0 [ 2646]   mov Z26.lo, V
16.hi: +++++.+00.0 [ 2664]   mov ACC, Z26.lo
16.lo: +++-0.+-0.0 [ 2424]   weirdxor ACC, Z24.hi
17.hi: 000+0.0+-.0 [   f9]   jneg 1+Y14.hi
17.lo: 0-+-+.000.0 [ -654]   jmp 1+Y6.lo
18.hi: +++0+.+00.0 [ 2571]   mov ACC, Z25.lo
18.lo: ++0++.+0-.0 [ 2388]   sub ACC, Z23.lo
19.hi: +++0+.-++.0 [ 2547]   mov Z25.lo, ACC
19.lo: 0-0++.0++.0 [ -73b]   jpos 1+Y5.lo
20.hi: -00+0.-0-.0 [-18cc]   X = drumsector 2
20.lo: --+-0.000.0 [-2046]   return
SECTOR 9:
00.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
00.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
01.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
01.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
02.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
02.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
03.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
03.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
04.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
04.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
05.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
05.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
06.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
06.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
07.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
07.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
08.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
08.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
09.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
09.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
10.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
10.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
11.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
11.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
12.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
12.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
13.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
13.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
14.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
14.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
15.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
15.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
16.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
16.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
17.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
17.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
18.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
18.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
19.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
19.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
20.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
20.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
21.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
21.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
22.hi: 00000.+00.0 [   1b]   mov ACC, Y13.hi
22.lo: 0000+.-0+.+ [   3a]   (V+) drumsector 0 = Y
23.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
23.lo: 00000.000.+ [    1]   (V+) jmp 1+Y13.hi
24.hi: 00000.000.- [   -1]   (V-)jmp 1+Y13.hi
24.lo: 00000.0+-.0 [    6]   jneg 1+Y13.hi
25.hi: 000+0.0++.+ [  100]   (V+) jpos 1+Y14.hi
25.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
SECTOR 10:
--- as string:
Интересный факт о Сетунь:

---
13.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
13.lo: 0+++0.0-0.0 [  c4e]   mov V, Y26.hi
14.hi: +0++-.-0-.0 [ 1cfe]   Z = drumsector 10
14.lo: +----.-00.0 [  cde]   IO.puts Z
15.hi: +0++-.-0-.+ [ 1cff]   (V+) Z = drumsector 10
15.lo: +----.-00.0 [  cde]   IO.puts Z
16.hi: 0++00.0--.0 [  b58]   add V, Y25.hi
16.lo: 00++0.0++.0 [  3d8]   jpos 1+Y17.hi
17.hi: 0++0+.0-0.0 [  bac]   mov V, Y25.lo
17.lo: 0+++0.00-.0 [  c54]   mov Y26.hi, V
18.hi: 00++-.-0+.0 [  363]   drumsector 10 = Y
18.lo: --+-0.000.0 [-2046]   return
19.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
19.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
20.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
20.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
21.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
21.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
22.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
22.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
23.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
23.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
24.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
24.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
25.hi: 00000.000.- [   -1]   (V-)jmp 1+Y13.hi
25.lo: 00000.00+.+ [    4]   (V+) mov Y13.hi, pc
26.hi: 00000.00+.+ [    4]   (V+) mov Y13.hi, pc
26.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
SECTOR 11:
--- as string:
Для установки машины требуется площадь 25-30 м2.

---
24.hi: 00000.0+0.+ [    a]   (V+) jzer 1+Y13.hi
24.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
SECTOR 12:
--- as string:
Скорость вращения магнитного барабана 6000 об/мин.

---
25.hi: 00000.0+0.+ [    a]   (V+) jzer 1+Y13.hi
25.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
SECTOR 13:
--- as string:
Потребляемая мощность — 2,5 кВт.

---
16.hi: 00000.0+0.+ [    a]   (V+) jzer 1+Y13.hi
16.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
SECTOR 14:
--- as string:
Быстродействие – 4800 оп/сек.

---
SECTOR 15:
SECTOR 16:
00.hi: 000+0.-0-.- [   d4]   (V-)Y = drumsector 2
00.lo: 000+0.0+0.0 [   fc]   jzer 1+Y14.hi
01.hi: 0000+.00+.0 [   54]   mov Y13.lo, pc
01.lo: 000+-.-+-.- [   8c]   (V-)unk #140 (0x8c)
02.hi: 0000+.0+-.- [   56]   (V-)jneg 1+Y13.lo
02.lo: 0000+.00+.+ [   55]   (V+) mov Y13.lo, pc
03.hi: 0000+.++-.0 [   72]   mov ACC, Y13.lo + ACC*BETA
03.lo: 0000+.00+.+ [   55]   (V+) mov Y13.lo, pc
04.hi: 0000+.+-+.+ [   67]   (V+) mov BETA, Y13.lo
04.lo: 000+-.-++.+ [   94]   (V+) mov Y14, ACC
05.hi: 0000+.0-+.0 [   4b]   mov V, pc+Y13.lo
05.lo: 0000+.+-+.0 [   66]   mov BETA, Y13.lo
06.hi: 0000+.0++.0 [   5d]   jpos 1+Y13.lo
06.lo: 0000+.0+-.+ [   58]   (V+) jneg 1+Y13.lo
07.hi: 0000+.+--.0 [   60]   halt
07.lo: 000+-.--0.+ [   7f]   (V+) unk #127 (0x7f)
08.hi: 0000+.0+0.+ [   5b]   (V+) jzer 1+Y13.lo
08.lo: 0000+.+--.- [   5f]   (V-)halt
09.hi: 0000+.0-0.+ [   49]   (V+) mov V, Y13.lo
09.lo: 0000+.+-+.0 [   66]   mov BETA, Y13.lo
10.hi: 0000+.+0+.0 [   6f]   add ACC, Y13.lo
10.lo: 000+-.-0+.+ [   8b]   (V+) drumsector 1 = Y
11.hi: 000+-.-0+.- [   89]   (V-)drumsector 1 = Y
11.lo: 0000+.+--.0 [   60]   halt
12.hi: 0000+.+--.+ [   61]   (V+) halt
12.lo: 0000+.00+.+ [   55]   (V+) mov Y13.lo, pc
13.hi: 0000+.0+-.0 [   57]   jneg 1+Y13.lo
13.lo: 000+-.-0-.+ [   85]   (V+) Y = drumsector 1
14.hi: 0000+.0-+.0 [   4b]   mov V, pc+Y13.lo
14.lo: 0000+.00-.- [   4d]   (V-)mov Y13.lo, V
15.hi: 0000+.+-0.+ [   64]   (V+) weirdxor ACC, Y13.lo
15.lo: 0000+.00-.- [   4d]   (V-)mov Y13.lo, V
16.hi: 000+-.-0-.0 [   84]   Y = drumsector 1
16.lo: 0000+.+-0.0 [   63]   weirdxor ACC, Y13.lo
17.hi: 0000+.+-0.+ [   64]   (V+) weirdxor ACC, Y13.lo
17.lo: 0000+.00-.- [   4d]   (V-)mov Y13.lo, V
18.hi: 0000+.+0+.0 [   6f]   add ACC, Y13.lo
18.lo: 00000.0+-.0 [    6]   jneg 1+Y13.hi
19.hi: 0000+.-0+.- [   38]   (V-)drumsector 0 = Y
19.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
SECTOR 17:
00.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
00.lo: 0000+.+-0.0 [   63]   weirdxor ACC, Y13.lo
01.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
01.lo: 000+-.---.+ [   7c]   (V+) unk #124 (0x7c)
02.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
02.lo: 0000+.+++.- [   77]   (V-)add ACC, Y13.lo * BETA
03.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
03.lo: 000+-.---.0 [   7b]   unk #123 (0x7b)
04.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
04.lo: 000+0.000.- [   f2]   (V-)jmp 1+Y14.hi
05.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
05.lo: 0000+.+00.- [   6b]   (V-)mov ACC, Y13.lo
06.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
06.lo: 0000+.+0+.0 [   6f]   add ACC, Y13.lo
07.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
07.lo: 000+-.++0.- [   c5]   (V-)mul ACC, Y14
08.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
08.lo: 0000+.--+.0 [   30]   unk #48 (0x30)
09.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
09.lo: 00000.000.+ [    1]   (V+) jmp 1+Y13.hi
10.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
10.lo: 0000+.+-+.+ [   67]   (V+) mov BETA, Y13.lo
11.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
11.lo: 0000+.---.+ [   2b]   (V+) unk #43 (0x2b)
12.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
12.lo: 000+0.0++.- [   fe]   (V-)jpos 1+Y14.hi
13.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
13.lo: 000+0.-00.- [   d7]   (V-)IO.broken
14.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
14.lo: 000+-.0+0.0 [   ab]   jzer 1+Y14
15.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
15.lo: 0000+.++0.+ [   76]   (V+) mul ACC, Y13.lo
16.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
16.lo: 000+-.+++.+ [   ca]   (V+) add ACC, Y14 * BETA
17.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
17.lo: 000+-.--+.+ [   82]   (V+) unk #130 (0x82)
18.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
18.lo: 000+-.+++.0 [   c9]   add ACC, Y14 * BETA
19.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
19.lo: 000+-.--0.- [   7d]   (V-)unk #125 (0x7d)
20.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
20.lo: 000+0.0+-.+ [   fa]   (V+) jneg 1+Y14.hi
21.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
21.lo: 0000+.0+0.- [   59]   (V-)jzer 1+Y13.lo
22.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
22.lo: 0000+.0-0.- [   47]   (V-)mov V, Y13.lo
23.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
23.lo: 000+0.00-.0 [   f0]   mov Y14.hi, V
24.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
24.lo: 000+-.0++.- [   ad]   (V-)jpos 1+Y14
25.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
25.lo: 000+0.-0-.- [   d4]   (V-)Y = drumsector 2
26.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
26.lo: 000+-.000.0 [   a2]   jmp 1+Y14
SECTOR 18:
00.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
00.lo: 000+-.0++.+ [   af]   (V+) jpos 1+Y14
01.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
01.lo: 000+-.0-+.0 [   9c]   mov V, pc+Y14
02.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
02.lo: 000+-.00+.- [   a4]   (V-)mov Y14, pc
03.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
03.lo: 0000+.++-.0 [   72]   mov ACC, Y13.lo + ACC*BETA
04.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
04.lo: 000+-.+0+.0 [   c0]   add ACC, Y14
05.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
05.lo: 000+-.+-+.0 [   b7]   mov BETA, Y14
06.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
06.lo: 000+0.0+0.+ [   fd]   (V+) jzer 1+Y14.hi
07.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
07.lo: 000+-.-++.0 [   93]   mov Y14, ACC
08.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
08.lo: 00000.+++.- [   26]   (V-)add ACC, Y13.hi * BETA
09.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
09.lo: 0000+.-00.0 [   36]   IO.broken
10.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
10.lo: 0000+.-+0.0 [   3f]   shift ACC, Y13.lo
11.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
11.lo: 000+0.00+.+ [   f7]   (V+) mov Y14.hi, pc
12.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
12.lo: 000+0.---.0 [   cc]   unk #204 (0xcc)
13.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
13.lo: 0000+.-0-.+ [   34]   (V+) Y = drumsector 0
14.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
14.lo: 000+-.00+.0 [   a5]   mov Y14, pc
15.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
15.lo: 000+0.-++.+ [   e5]   (V+) mov Y14.hi, ACC
16.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
16.lo: 000+0.00-.+ [   f1]   (V+) mov Y14.hi, V
17.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
17.lo: 0000+.++-.- [   71]   (V-)mov ACC, Y13.lo + ACC*BETA
18.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
18.lo: 000+0.-00.0 [   d8]   IO.broken
19.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
19.lo: 0000+.--+.+ [   31]   (V+) unk #49 (0x31)
20.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
20.lo: 00000.+-+.0 [   15]   mov BETA, Y13.hi
21.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
21.lo: 00000.00+.+ [    4]   (V+) mov Y13.hi, pc
22.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
22.lo: 000+-.++0.+ [   c7]   (V+) mul ACC, Y14
23.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
23.lo: 00000.++0.- [   23]   (V-)mul ACC, Y13.hi
24.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
24.lo: 000+-.++-.0 [   c3]   mov ACC, Y14 + ACC*BETA
25.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
25.lo: 00000.+0-.0 [   18]   sub ACC, Y13.hi
26.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
26.lo: 000+-.0--.0 [   96]   add V, Y14
SECTOR 19:
00.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
00.lo: 00000.0+-.- [    5]   (V-)jneg 1+Y13.hi
01.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
01.lo: 000+-.0-0.+ [   9a]   (V+) mov V, Y14
02.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
02.lo: 00000.0+-.+ [    7]   (V+) jneg 1+Y13.hi
03.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
03.lo: 00000.+-0.0 [   12]   weirdxor ACC, Y13.hi
04.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
04.lo: 000+-.--+.- [   80]   (V-)unk #128 (0x80)
05.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
05.lo: 000+0.-+0.+ [   e2]   (V+) shift ACC, Y14.hi
06.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
06.lo: 000+0.0-0.+ [   eb]   (V+) mov V, Y14.hi
07.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
07.lo: 00000.+++.0 [   27]   add ACC, Y13.hi * BETA
08.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
08.lo: 000+-.+--.+ [   b2]   (V+) halt
09.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
09.lo: 0000+.++0.0 [   75]   mul ACC, Y13.lo
10.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
10.lo: 00000.0+0.0 [    9]   jzer 1+Y13.hi
11.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
11.lo: 000+-.-0-.- [   83]   (V-)Y = drumsector 1
12.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
12.lo: 0000+.--0.- [   2c]   (V-)unk #44 (0x2c)
13.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
13.lo: 00000.+00.- [   1a]   (V-)mov ACC, Y13.hi
14.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
14.lo: 00000.+00.0 [   1b]   mov ACC, Y13.hi
15.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
15.lo: 0000+.+0+.- [   6e]   (V-)add ACC, Y13.lo
16.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
16.lo: 0000+.0+0.0 [   5a]   jzer 1+Y13.lo
17.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
17.lo: 000+-.00-.+ [   a0]   (V+) mov Y14, V
18.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
18.lo: 0000+.000.+ [   52]   (V+) jmp 1+Y13.lo
19.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
19.lo: 0000+.-+-.- [   3b]   (V-)unk #59 (0x3b)
20.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
20.lo: 000+0.-0-.+ [   d6]   (V+) Y = drumsector 2
21.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
21.lo: 000+-.+-0.- [   b3]   (V-)weirdxor ACC, Y14
22.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
22.lo: 0000+.---.- [   29]   (V-)unk #41 (0x29)
23.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
23.lo: 000+0.-++.- [   e3]   (V-)mov Y14.hi, ACC
24.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
24.lo: 0000+.--+.- [   2f]   (V-)unk #47 (0x2f)
25.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
25.lo: 000+-.-0-.0 [   84]   Y = drumsector 1
26.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
26.lo: 0000+.00+.- [   53]   (V-)mov Y13.lo, pc
SECTOR 20:
00.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
00.lo: 000+0.--+.- [   d1]   (V-)unk #209 (0xd1)
01.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
01.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
02.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
02.lo: 000+0.0-+.0 [   ed]   mov V, pc+Y14.hi
03.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
03.lo: 00000.++-.- [   20]   (V-)mov ACC, Y13.hi + ACC*BETA
04.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
04.lo: 000+0.0+0.0 [   fc]   jzer 1+Y14.hi
05.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
05.lo: 000+-.+--.0 [   b1]   halt
06.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
06.lo: 0000+.0+0.+ [   5b]   (V+) jzer 1+Y13.lo
07.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
07.lo: 0000+.+0-.+ [   6a]   (V+) sub ACC, Y13.lo
08.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
08.lo: 000+0.---.- [   cb]   (V-)unk #203 (0xcb)
09.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
09.lo: 000+-.+00.+ [   be]   (V+) mov ACC, Y14
10.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
10.lo: 0000+.-0+.0 [   39]   drumsector 0 = Y
11.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
11.lo: 0000+.0-+.- [   4a]   (V-)mov V, pc+Y13.lo
12.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
12.lo: 0000+.0-+.+ [   4c]   (V+) mov V, pc+Y13.lo
13.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
13.lo: 0000+.0+-.+ [   58]   (V+) jneg 1+Y13.lo
14.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
14.lo: 000+0.--0.0 [   cf]   unk #207 (0xcf)
15.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
15.lo: 000+0.--0.+ [   d0]   (V+) unk #208 (0xd0)
16.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
16.lo: 000+0.00-.- [   ef]   (V-)mov Y14.hi, V
17.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
17.lo: 000+-.0+0.- [   aa]   (V-)jzer 1+Y14
18.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
18.lo: 000+0.0+0.- [   fb]   (V-)jzer 1+Y14.hi
19.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
19.lo: 0000+.-++.+ [   43]   (V+) mov Y13.lo, ACC
20.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
20.lo: 0000+.00-.- [   4d]   (V-)mov Y13.lo, V
21.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
21.lo: 0000+.-0-.0 [   33]   Y = drumsector 0
22.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
22.lo: 000+-.-0-.+ [   85]   (V+) Y = drumsector 1
23.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
23.lo: 0000+.0--.0 [   45]   add V, Y13.lo
24.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
24.lo: 000+0.0+-.0 [   f9]   jneg 1+Y14.hi
25.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
25.lo: 00000.00+.- [    2]   (V-)mov Y13.hi, pc
26.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
26.lo: 000+-.--0.+ [   7f]   (V+) unk #127 (0x7f)
SECTOR 21:
00.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
00.lo: 0000+.000.- [   50]   (V-)jmp 1+Y13.lo
01.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
01.lo: 0000+.-+-.0 [   3c]   unk #60 (0x3c)
02.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
02.lo: 000+-.00-.0 [   9f]   mov Y14, V
03.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
03.lo: 000+-.0+-.0 [   a8]   jneg 1+Y14
04.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
04.lo: 0000+.000.0 [   51]   jmp 1+Y13.lo
05.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
05.lo: 000+-.000.+ [   a3]   (V+) jmp 1+Y14
06.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
06.lo: 0000+.-+0.+ [   40]   (V+) shift ACC, Y13.lo
07.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
07.lo: 000+-.-+0.- [   8f]   (V-)shift ACC, Y14
08.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
08.lo: 000+-.-++.- [   92]   (V-)mov Y14, ACC
09.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
09.lo: 000+-.0-+.+ [   9d]   (V+) mov V, pc+Y14
10.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
10.lo: 0000+.-0+.- [   38]   (V-)drumsector 0 = Y
11.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
11.lo: 000+0.00+.- [   f5]   (V-)mov Y14.hi, pc
12.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
12.lo: 000+-.+00.- [   bc]   (V-)mov ACC, Y14
13.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
13.lo: 000+-.+-+.- [   b6]   (V-)mov BETA, Y14
14.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
14.lo: 000+0.-0+.- [   da]   (V-)drumsector 2 = Y
15.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
15.lo: 00000.++-.0 [   21]   mov ACC, Y13.hi + ACC*BETA
16.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
16.lo: 00000.+--.+ [   10]   (V+) halt
17.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
17.lo: 000+0.0++.0 [   ff]   jpos 1+Y14.hi
18.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
18.lo: 000+0.000.0 [   f3]   jmp 1+Y14.hi
19.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
19.lo: 000+0.--+.0 [   d2]   unk #210 (0xd2)
20.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
20.lo: 000+0.---.+ [   cd]   (V+) unk #205 (0xcd)
21.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
21.lo: 00000.0++.0 [    c]   jpos 1+Y13.hi
22.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
22.lo: 00000.+-0.+ [   13]   (V+) weirdxor ACC, Y13.hi
23.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
23.lo: 000+0.0-+.- [   ec]   (V-)mov V, pc+Y14.hi
24.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
24.lo: 0000+.+--.- [   5f]   (V-)halt
25.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
25.lo: 000+-.0--.+ [   97]   (V+) add V, Y14
26.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
26.lo: 0000+.0--.- [   44]   (V-)add V, Y13.lo
SECTOR 22:
00.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
00.lo: 00000.+0-.- [   17]   (V-)sub ACC, Y13.hi
01.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
01.lo: 000+-.++-.+ [   c4]   (V+) mov ACC, Y14 + ACC*BETA
02.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
02.lo: 000+-.0+-.- [   a7]   (V-)jneg 1+Y14
03.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
03.lo: 000+-.--0.0 [   7e]   unk #126 (0x7e)
04.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
04.lo: 0000+.-+-.+ [   3d]   (V+) unk #61 (0x3d)
05.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
05.lo: 0000+.+-0.+ [   64]   (V+) weirdxor ACC, Y13.lo
06.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
06.lo: 0000+.0++.0 [   5d]   jpos 1+Y13.lo
07.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
07.lo: 00000.+0-.+ [   19]   (V+) sub ACC, Y13.hi
08.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
08.lo: 0000+.++-.+ [   73]   (V+) mov ACC, Y13.lo + ACC*BETA
09.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
09.lo: 0000+.+--.0 [   60]   halt
10.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
10.lo: 000+-.--+.0 [   81]   unk #129 (0x81)
11.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
11.lo: 0000+.00-.+ [   4f]   (V+) mov Y13.lo, V
12.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
12.lo: 000+0.-0+.+ [   dc]   (V+) drumsector 2 = Y
13.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
13.lo: 00000.++-.+ [   22]   (V+) mov ACC, Y13.hi + ACC*BETA
14.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
14.lo: 0000+.---.0 [   2a]   unk #42 (0x2a)
15.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
15.lo: 000+-.-+0.0 [   90]   shift ACC, Y14
16.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
16.lo: 000+-.-00.+ [   88]   (V+) IO.broken
17.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
17.lo: 0000+.0--.+ [   46]   (V+) add V, Y13.lo
18.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
18.lo: 000+0.0-+.+ [   ee]   (V+) mov V, pc+Y14.hi
19.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
19.lo: 000+-.+-+.+ [   b8]   (V+) mov BETA, Y14
20.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
20.lo: 00000.+-+.- [   14]   (V-)mov BETA, Y13.hi
21.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
21.lo: 000+0.-+-.0 [   de]   unk #222 (0xde)
22.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
22.lo: 0000+.0++.+ [   5e]   (V+) jpos 1+Y13.lo
23.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
23.lo: 00000.0++.- [    b]   (V-)jpos 1+Y13.hi
24.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
24.lo: 000+0.-0+.0 [   db]   drumsector 2 = Y
25.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
25.lo: 000+0.-+0.- [   e0]   (V-)shift ACC, Y14.hi
26.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
26.lo: 0000+.-0-.- [   32]   (V-)Y = drumsector 0
SECTOR 23:
00.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
00.lo: 0000+.-0+.+ [   3a]   (V+) drumsector 0 = Y
01.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
01.lo: 00000.0+0.+ [    a]   (V+) jzer 1+Y13.hi
02.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
02.lo: 0000+.0-0.+ [   49]   (V+) mov V, Y13.lo
03.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
03.lo: 00000.0+-.0 [    6]   jneg 1+Y13.hi
04.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
04.lo: 00000.++0.0 [   24]   mul ACC, Y13.hi
05.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
05.lo: 0000+.0++.- [   5c]   (V-)jpos 1+Y13.lo
06.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
06.lo: 000+-.++-.- [   c2]   (V-)mov ACC, Y14 + ACC*BETA
07.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
07.lo: 000+0.--+.+ [   d3]   (V+) unk #211 (0xd3)
08.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
08.lo: 000+-.0+0.+ [   ac]   (V+) jzer 1+Y14
09.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
09.lo: 0000+.+-0.- [   62]   (V-)weirdxor ACC, Y13.lo
10.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
10.lo: 000+-.-+0.+ [   91]   (V+) shift ACC, Y14
11.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
11.lo: 000+-.0--.- [   95]   (V-)add V, Y14
12.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
12.lo: 000+0.-++.0 [   e4]   mov Y14.hi, ACC
13.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
13.lo: 0000+.+++.+ [   79]   (V+) add ACC, Y13.lo * BETA
14.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
14.lo: 000+0.0--.0 [   e7]   add V, Y14.hi
15.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
15.lo: 000+-.+++.- [   c8]   (V-)add ACC, Y14 * BETA
16.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
16.lo: 0000+.-00.+ [   37]   (V+) IO.broken
17.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
17.lo: 0000+.+00.+ [   6d]   (V+) mov ACC, Y13.lo
18.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
18.lo: 000+-.-+-.0 [   8d]   unk #141 (0x8d)
19.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
19.lo: 000+0.-0-.0 [   d5]   Y = drumsector 2
20.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
20.lo: 0000+.00-.0 [   4e]   mov Y13.lo, V
21.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
21.lo: 000+-.0+-.+ [   a9]   (V+) jneg 1+Y14
22.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
22.lo: 0000+.+00.0 [   6c]   mov ACC, Y13.lo
23.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
23.lo: 0000+.0+-.- [   56]   (V-)jneg 1+Y13.lo
24.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
24.lo: 000+0.000.+ [   f4]   (V+) jmp 1+Y14.hi
25.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
25.lo: 000+0.0-0.0 [   ea]   mov V, Y14.hi
26.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
26.lo: 0000+.+-+.- [   65]   (V-)mov BETA, Y13.lo
SECTOR 24:
00.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
00.lo: 000+-.---.- [   7a]   (V-)unk #122 (0x7a)
01.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
01.lo: 000+-.0++.0 [   ae]   jpos 1+Y14
02.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
02.lo: 00000.0+0.- [    8]   (V-)jzer 1+Y13.hi
03.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
03.lo: 000+-.+0-.0 [   ba]   sub ACC, Y14
04.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
04.lo: 0000+.+++.0 [   78]   add ACC, Y13.lo * BETA
05.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
05.lo: 00000.++0.+ [   25]   (V+) mul ACC, Y13.hi
06.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
06.lo: 0000+.--0.+ [   2e]   (V+) unk #46 (0x2e)
07.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
07.lo: 00000.+00.+ [   1c]   (V+) mov ACC, Y13.hi
08.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
08.lo: 000+-.00+.+ [   a6]   (V+) mov Y14, pc
09.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
09.lo: 000+-.+-0.0 [   b4]   weirdxor ACC, Y14
10.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
10.lo: 000+-.++0.0 [   c6]   mul ACC, Y14
11.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
11.lo: 000+0.0--.+ [   e8]   (V+) add V, Y14.hi
12.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
12.lo: 000+0.-+-.- [   dd]   (V-)unk #221 (0xdd)
13.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
13.lo: 0000+.++0.- [   74]   (V-)mul ACC, Y13.lo
14.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
14.lo: 00000.+0+.+ [   1f]   (V+) add ACC, Y13.hi
15.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
15.lo: 0000+.0-+.0 [   4b]   mov V, pc+Y13.lo
16.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
16.lo: 000+-.+00.0 [   bd]   mov ACC, Y14
17.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
17.lo: 000+-.-0+.+ [   8b]   (V+) drumsector 1 = Y
18.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
18.lo: 000+-.-0+.0 [   8a]   drumsector 1 = Y
19.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
19.lo: 0000+.+0+.+ [   70]   (V+) add ACC, Y13.lo
20.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
20.lo: 0000+.-+0.- [   3e]   (V-)shift ACC, Y13.lo
21.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
21.lo: 000+-.+-0.+ [   b5]   (V+) weirdxor ACC, Y14
22.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
22.lo: 0000+.+-+.0 [   66]   mov BETA, Y13.lo
23.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
23.lo: 0000+.0-0.0 [   48]   mov V, Y13.lo
24.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
24.lo: 00000.00+.0 [    3]   mov Y13.hi, pc
25.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
25.lo: 000+0.00+.0 [   f6]   mov Y14.hi, pc
26.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
26.lo: 00000.+--.- [    e]   (V-)halt
SECTOR 25:
00.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
00.lo: 0000+.+--.+ [   61]   (V+) halt
01.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
01.lo: 0000+.-00.- [   35]   (V-)IO.broken
02.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
02.lo: 0000+.0+-.0 [   57]   jneg 1+Y13.lo
03.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
03.lo: 000+-.+0-.- [   b9]   (V-)sub ACC, Y14
04.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
04.lo: 000+-.-00.- [   86]   (V-)IO.broken
05.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
05.lo: 000+-.+0+.+ [   c1]   (V+) add ACC, Y14
06.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
06.lo: 00000.+0+.- [   1d]   (V-)add ACC, Y13.hi
07.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
07.lo: 000+-.00-.- [   9e]   (V-)mov Y14, V
08.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
08.lo: 000+0.-+0.0 [   e1]   shift ACC, Y14.hi
09.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
09.lo: 000+0.0+-.- [   f8]   (V-)jneg 1+Y14.hi
10.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
10.lo: 000+-.0-0.- [   98]   (V-)mov V, Y14
11.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
11.lo: 00000.+-0.- [   11]   (V-)weirdxor ACC, Y13.hi
12.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
12.lo: 0000+.+0-.0 [   69]   sub ACC, Y13.lo
13.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
13.lo: 000+0.-00.+ [   d9]   (V+) IO.broken
14.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
14.lo: 000+-.-+-.+ [   8e]   (V+) unk #142 (0x8e)
15.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
15.lo: 000+-.-++.+ [   94]   (V+) mov Y14, ACC
16.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
16.lo: 000+-.0-+.- [   9b]   (V-)mov V, pc+Y14
17.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
17.lo: 00000.+0+.0 [   1e]   add ACC, Y13.hi
18.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
18.lo: 000+-.-00.0 [   87]   IO.broken
19.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
19.lo: 000+0.0-0.- [   e9]   (V-)mov V, Y14.hi
20.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
20.lo: 000+0.--0.- [   ce]   (V-)unk #206 (0xce)
21.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
21.lo: 0000+.00+.+ [   55]   (V+) mov Y13.lo, pc
22.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
22.lo: 00000.+++.+ [   28]   (V+) add ACC, Y13.hi * BETA
23.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
23.lo: 000+0.-+-.+ [   df]   (V+) unk #223 (0xdf)
24.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
24.lo: 000+-.-+-.- [   8c]   (V-)unk #140 (0x8c)
25.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
25.lo: 000+-.000.- [   a1]   (V-)jmp 1+Y14
26.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
26.lo: 000+-.-0+.- [   89]   (V-)drumsector 1 = Y
SECTOR 26:
00.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
00.lo: 00000.0++.+ [    d]   (V+) jpos 1+Y13.hi
01.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
01.lo: 000+-.+0+.- [   bf]   (V-)add ACC, Y14
02.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
02.lo: 000+0.0--.- [   e6]   (V-)add V, Y14.hi
03.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
03.lo: 0000+.-++.0 [   42]   mov Y13.lo, ACC
04.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
04.lo: 0000+.+0-.- [   68]   (V-)sub ACC, Y13.lo
05.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
05.lo: 0000+.-++.- [   41]   (V-)mov Y13.lo, ACC
06.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
06.lo: 000+-.0-0.0 [   99]   mov V, Y14
07.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
07.lo: 0000+.--0.0 [   2d]   unk #45 (0x2d)
08.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
08.lo: 00000.+--.0 [    f]   halt
09.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
09.lo: 000+-.+--.- [   b0]   (V-)halt
10.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
10.lo: 0000+.00+.0 [   54]   mov Y13.lo, pc
11.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
11.lo: 000+-.+0-.+ [   bb]   (V+) sub ACC, Y14
12.hi: 00000.000.0 [    0]   jmp 1+Y13.hi
12.lo: 00000.+-+.+ [   16]   (V+) mov BETA, Y13.hi
SECTOR 27:
--- as string:
Пароль неверен!

---
SECTOR 28:
--- as string:
Введите пароль: 
---
SECTOR 29:
--- as string:
Введенный пароль слишком длинный!

---
SECTOR 30:
--- as string:
Добро пожаловать!

---
SECTOR 31:
--- as string:

Меню:
1. Коробейники
2. Сведения
3. Админка

---
22.hi: 00000.0+0.+ [    a]   (V+) jzer 1+Y13.hi
22.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
SECTOR 32:
--- as string:

Спасибо, что выбрали сегодня Сетунь.

---
SECTOR 33:
--- as string:
Ошибка: недопустимый символ!

---
14.hi: 00000.0+0.+ [    a]   (V+) jzer 1+Y13.hi
14.lo: 00000.000.0 [    0]   jmp 1+Y13.hi
SECTOR 34:
--- as string:
Ошибка: нет такого пункта меню!

---
SECTOR 35:
