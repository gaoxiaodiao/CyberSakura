C THIS PROGRAM CALCULATES IF THE INPUT ARRAY OF CHARACTERS IS A CORRECT         
C FLAG FOR THE 2020 CHRISTMAS COMPETITION.                                      
      SUBROUTINE ENTRYPOINT(MAT)                                                
          INTEGER MAT(*)                                                        
          COMPLEX*8 PORTION(5)                                                  
          COMMON /P/ PORTION                                                    
          INTEGER STR(-52:0)                                                    
          COMMON /PERFORMA/ STR                                                 
          DO 70 I = 0, 16, 4                                                    
           IF (XOR(STR(- MAT(RSHIFT(I, 1) - 3)), 45) .NE.                       
     +         INT(REAL(PORTION(RSHIFT(I, 2) + 1)))                             
     +      ) WRITE (*,*) 'ERROR 1: FLACK CHECK FAIL.'                          
                                                                                
           IF (XOR(STR(- MAT(RSHIFT(I + 2, 1) - 3)), 45) .NE.                   
     +         INT(IMAG(PORTION(RSHIFT(I, 2) + 1)))                             
     +      ) WRITE (*,*) 'ERROR 1: FLACK CHECK FAIL.'                          
70        CONTINUE                                                              
      END                                                                       
      INTEGER FUNCTION MAIN(POSITRONS)                                          
              INTEGER POSITRONS(*)                                              
              CHARACTER COERCION                                                
              INTEGER ARITHMETIC, OUT                                           
              INTEGER STR(-52:0)                                                
            COMMON /PERFORMA/ STR                                               
            COERCION = ''''                                                     
            ARITHMETIC = 2 * ICHAR(COERCION) + 17                               
            MAIN = 1                                                            
            DO 20 ITERATOR = 8, 1, -1                                           
                IF (STR(POSITRONS(ITERATOR) + 1)                                
     +                  .NE. ARITHMETIC) MAIN = 0                               
20            CONTINUE                                                          
            RETURN                                                              
      END                                                                       
      SUBROUTINE SWAPPER()                                                      
              INTEGER POLYMER, COPOLYMER                                        
              COMMON /OPERATION/ COPOLYMER, POLYMER                             
              INTEGER OPERATOR                                                  
              OPERATOR = POLYMER                                                
              POLYMER = COPOLYMER                                               
              COPOLYMER = OPERATOR                                              
            RETURN                                                              
      END                                                                       
      SUBROUTINE SWAPPERWRAPPER(POLYMER, COPOLYMER)                             
              INTEGER POLYMER, COPOLYMER                                        
              INTEGER OP                                                        
              CALL SWAPPER()                                                    
                                                                                
              OP = POLYMER                                                      
              POLYMER = COPOLYMER                                               
              COPOLYMER = OP                                                    
            RETURN                                                              
      END                                                                       
      BLOCK DATA                                                                
              DOUBLE PRECISION PF                                               
              PARAMETER (PF = 1D99)                                             
              COMPLEX*8 PORTION(5)                                              
              COMMON /P/ PORTION                                                
              DATA PORTION/(24,30),(114,30),(73,73),(28,99),(114,80)/           
      END                                                                       
      PROGRAM CHRISTMAS                                                         
      LOGICAL DECISION                                                          
      PARAMETER (PU = 3, PV = 1.0D1 / (+10), PW = -52)                          
      DIMENSION M(3,3)                                                          
      INTEGER AMINO(1000:1009)                                                  
      CHARACTER AF*2, BF*2, SS * 2                                              
      CHARACTER S(-52:0)                                                        
      INTEGER STR(-52:0)                                                        
      COMMON /PERFORMA/ STR                                                     
      INTEGER POLYMER, COPOLYMER                                                
      COMMON /OPERATION/ POLYMER, COPOLYMER                                     
      INTEGER POSITRONS(8), A(5), IOS, X                                        
      WRITE (*,*) 'INPUT FLAG:'                                                 
      READ (*,*) S                                                              
      DECISION = .TRUE.                                                         
      X = 0                                                                     
      AF = 'HD'                                                                 
      BF = 'DS'                                                                 
C     PAUSE 5                                                                   
      DO 10 I = -52, 0                                                          
            STR(I) = ICHAR(S(I))                                                
10      CONTINUE                                                                
                                                                                
      DATA AMINO/51, 49, 50, 49, 49, 49, 50, 49, 51, 50/                        
      DATA A(1)/88/, A(2)/45/, A(3)/77/, A(4)/65/, A(5)/83/                     
      IF (STR(-52) .NE. A(1)) DECISION = .FALSE.                                
      IF (STR(-51) .NE. A(2)) DECISION = .FALSE.                                
      IF (STR(-50) .NE. A(3)) DECISION = .FALSE.                                
      IF (STR(-49) .NE. A(4)) DECISION = .FALSE.                                
      IF (STR(-48) .NE. A(5)) DECISION = .FALSE.                                
      IF (S(-2) .NE. '0') DECISION = .FALSE.                                    
C     IF (S(-3) .NE. '1') DECISION = .FALSE.                                    
      DATA POSITRONS/-46,-40,-36,-32,-25,-20,-10,-5/                            
      IF (MAIN(POSITRONS) .LT. 1E0) DECISION = (PU .EQ. 2)                      
      IF (ICHAR(S(INT(0D0))) .NE. 125) DECISION = .FALSE.                       
      IF (ICHAR(S(INT(PW + 5))) .NE. 123) DECISION = .FALSE.                    
C     IF (ICHAR(S(-1)) .NE. 115) DECISION = .FALSE.                             
                                                                                
      X = X + 1                                                                 
      IF (DECISION) THEN                                                        
            GOTO 1000                                                           
      ELSE                                                                      
              GOTO 9998                                                         
      ENDIF                                                                     
1000  WRITE (*,*) 'FLAG CHECK OK.'                                              
                                                                                
1001  OPEN(UNIT=12, IOSTAT=IOS, ERR=1002, FILE='FLAG.ENC',                      
     +STATUS='NEW', ACCESS='SEQUENTIAL', FORM='FORMATTED')                      
      GOTO 1010                                                                 
1002  OPEN(UNIT=12, IOSTAT=IOS, ERR=9997, FILE='FLAG.ENC',                      
     +STATUS='OLD', ACCESS='SEQUENTIAL', FORM='FORMATTED')                      
C     "I KNOW WHAT THIS DOES"                                                   
1010  DO 40 I = 7, X, -1                                                        
              WRITE(12,*) CHAR(XOR(STR(- 6 * X), 255))                          
              GOTO 10                                                           
30      CONTINUE                                                                
      DO 40 J = 5, 3, -1                                                        
              WRITE(12,*) CHAR(XOR(STR(- 7 * X), 45))                           
              WRITE(STR(-3 * X))                                                
40      CONTINUE                                                                
      DO 60 F = 0, 8                                                            
        X = F + 1                                                               
          DO 50 I = 1, X                                                        
                 X = X + 4                                                      
50        CONTINUE                                                              
                                                                                
        M(INT(F) / 3, MOD(INT(F), 3)) = X                                       
60    CONTINUE                                                                  
                                                                                
      POLYMER = M(0, 0)                                                         
      COPOLYMER = M(0, 1)                                                       
      CALL SWAPPERWRAPPER(M(0, 0), M(0, 1))                                     
      CALL ENTRYPOINT(M)                                                        
      DO 80 I = -52, 0                                                          
           IF (MOD(I, 5) .EQ. 0 .OR. MOD(I, 6) .EQ. 0) GOTO 80                  
          IF ((STR(I) .GT. 96) .AND. (STR(I) .LT. 123))                         
     +            WRITE(12, '(A, A)') REAL(XOR(INT(STR(0) / 16)                 
     +                , -I)), REAL(XOR(STR(I), -I))                             
80      CONTINUE                                                                
                                                                                
      SS = S(-44) // S(-34)                                                     
      IF (SS .NE. AF) WRITE (*, *) GOTO 9998                                    
      SS = S(-32) // S(-23)                                                     
      IF (SS .NE. BF) WRITE (*, *) GOTO 9998                                    
      OPEN(UNIT=13, IOSTAT=IOS, ERR=9996, FILE='U',                             
     +STATUS='NEW', ACCESS='SEQUENTIAL', FORM='FORMATTED')                      
      WRITE(13, *) "1303330310"                                                 
      CLOSE(13)                                                                 
      WRITE(13, 111)                                                            
     +CHAR(XOR(AMINO(1000),2)),                                                 
     +CHAR(XOR(AMINO(1001),2)) ,                                                
     +CHAR(XOR(AMINO(1002),2))  ,                                               
     +CHAR(XOR(AMINO(1003),2))   ,                                              
     +CHAR(XOR(AMINO(1004),2))    ,! HI MOM !                                   
     +CHAR(XOR(AMINO(1005),2))   ,                                              
     +CHAR(XOR(AMINO(1006),2))  ,                                               
     +CHAR(XOR(AMINO(1007),2)) ,                                                
     +CHAR(XOR(AMINO(1008),2)),                                                 
     +CHAR(XOR(AMINO(1009),2))                                                  
      CLOSE(UNIT=13)                                                            
      OPEN(UNIT=13, FILE='U', STATUS='OLD')                                     
      READ(13, *, IOSTAT=IOS) X                                                 
      X = X / 10                                                                
      DO 91 I = 0, -52, -1                                                      
            IF (ICHAR(S(I)) .EQ. 48 + MOD(X, 10)) THEN                          
                    WRITE(12,112) I + 100                                       
                    X = X / 10                                                  
            ENDIF                                                               
91      CONTINUE                                                                
      CLOSE(UNIT=12)                                                            
111   FORMAT(A,A,A,A,A,A,A,A,A,A)                                               
112   FORMAT(A,A,I4)                                                            
      GOTO 9999                                                                 
9996  WRITE (*,*) 'ERROR 3: CANNOT CREATE U SHAPE SUPPLICANT.'                  
      GOTO 9999                                                                 
9997  WRITE (*,*) 'ERROR 2: CANNOT OPEN OUTPUT FILE.'                           
      GOTO 9999                                                                 
9998  WRITE (*,*) 'ERROR 1: FLACK CHECK FAIL.'                                  
9999  STOP                                                                      
      END                                                                       
