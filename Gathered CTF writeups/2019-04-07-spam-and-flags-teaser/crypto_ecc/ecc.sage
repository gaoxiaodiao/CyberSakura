import re

import requests
import string

def long_to_bytes(x):
    return hex(long(x))[2:-1].decode("hex")

def encryptPoint(g):
    print('g',g)
    r = requests.get("http://34.76.223.72/?pw_first=S&encpw_x=%s&encpw_y=%s" % (hex(long(g[0]))[2:-1], hex(long(g[1]))[2:-1]))
    match = re.findall(".*\'x\': \'(.*?)\',\s*\'y\': \'(.*?)\'.*", r.text)[0]
    x, y = match
    return int(x, 16), int(y, 16)

def grab(x):
    r = requests.get("http://34.76.223.72/?pw_first=%s&encpw_x=0&encpw_y=0" % x)
    if "No such file or directory in" not in r.text:
        res = eval(r.text[15:-2])
        return map(lambda x: (int(x[0], 16), int(x[1], 16)), res['pws'][:-1])
    else:
        return []

def main():
    P = 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF
    A = 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC

    quotients, mods = [], []

    for i in range(0):
        B = i
        print('B',B)
        try:
            E = EllipticCurve(GF(P), [A, int(B)])
            order = E.order()
            factors = prime_factors(order)
            print('Factors', factors)
            for prime in factors:
                if prime > 10 and prime < 2**20:
                    try:
                        print("Solving for prime", prime)
                        G = E.gen(0) * int(order / prime)
                        G1x, G1y = encryptPoint((G[0], G[1]))
                        G1 = E(G1x, G1y)
                        solution = G.discrete_log(G1)
                        print("K mod " + str(prime) + " = " + str(solution))
                        mods.append(prime)
                        quotients.append(solution)
                        print('Known relations', quotients, mods)
                    except Exception as e:
                        pass # wrong point
        except:
            pass # wrong curve

    # example value we got
    # quotients, mods=([65, 450, 86, 965, 27586, 1208012824, 44, 3890, 164415819, 45, 498, 14692, 38150], [71, 823, 1229, 7489, 30203, 1275057701, 179, 13003, 1307093479, 2447, 4003, 16033, 102001])
    secret = CRT_list(quotients, mods)
    print('Secret', secret)
    print('Secret', long_to_bytes(secret))

    B = 0x5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B
    E = EllipticCurve(GF(P), [A, B])
    G = E(48439561293906451759052585252797914202762949526041747995844080717082404635286,36134250956749795798585127919587881956611106672985015071877198253568414405109)
    inv = inverse_mod(secret, E.order())
    pws = grab('S')
    # passwords we got from server:
    # pws = [(16322001375995172700749243424121944666619335518252203920162973357977984512773L, 40147989728787993966364965184732241203256938726969407438809337007837026286532L), (73447354108246959720320597626169819905703946630090887562593193901385438266500L, 89299360751908349081374550872429447405905048050985152172489188412742813610776L), (80547565563439827355935186677023246038985816910069176371739763914641016769027L, 21709143361928405685209176160838014860890634184546700316949501853571722657695L), (67724868990720267969200035056164916632936417930244404142408396340847423718472L, 66998575451581566971677028166781057694698334360954606333409497285845179052092L), (82120587002752014811188782295917693319283332899447862165860721278230764534525L, 11283453600415498857002705077442276275936025121235651028968696254978380969385L), (28929492873396211469129801181283098397660866359975984205532746727908808367085L, 62147145601715927523515433842403653176974438179028178443262868007521695502780L), (26262893298703030334770866983239206463879243197678778498565008157181566729875L, 32134356740035389553205988248355730182637852733840658636261567136307174951949L), (2469438324087488067239142554276639097755234695319682865213121782237732595614L, 75716623197244089537206361857500712995784861682596638112511888999710435416727L), (61076078633410604456212086815948818151417195728994421728271643125905376318130L, 82605880079399856577580121891734413262158294246685300328232719674936505868278L), (38108945816582365154800758178583897906305458036219368358517928927050982786644L, 84072604882149996556577613174056525737718134124270924915051403932044213296154L), (66114345943780080128882413806633605717345990323516512782502473385638188871854L, 88730732589393546595512985615184260209293182976189451185152042629228537873992L), (98427541578914010929662193037918833593125553418624313004447652884668115553676L, 113496519142912500489112070717055134396302641991989678580332719440141132533518L)]
    for x,y in pws:
        Q = E(x,y)
        X = Q*inv
        print(long_to_bytes(X[0]))

main()